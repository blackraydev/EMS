{"version":3,"sources":["redux/constants.js","redux/actions.js","scripts/ChooseCard.js","scripts/ToggleText.js","scripts/ToggleAddBtn.js","scripts/ClearErrors.js","components/NavBar.js","redux/directory.js","scripts/TogglePicker.js","scripts/ToggleWarning.js","components/FullCard.js","scripts/Validate.js","components/SmallCard.js","components/Container.js","App.js","redux/cardReducer.js","redux/editReducer.js","redux/store.js","index.js"],"names":["ADD_CARD","DELETE_CARD","UPDATE_CARD","CHOOSE_CARD","RESET_CARD","EDIT_DATA","chooseCard","cardId","type","payload","editData","card","ChooseCard","id","allCards","document","querySelectorAll","fullCard","querySelector","deleteBtn","hideLabelRight","i","length","getAttribute","classList","contains","remove","add","toggle","ToggleText","flag","text","setTimeout","style","display","ToggleAddBtn","addBtn","NavBar","cards","useSelector","state","dispatch","useDispatch","targetCard","find","chosen","isEmpty","some","empty","emptyCard","Math","ceil","random","fio","position","birthDate","sex","fired","emptyData","className","onClick","console","log","ClearErrors","positions","TogglePicker","ToggleWarning","warning","FullCard","data","edit","currentCard","onChange","e","target","value","name","placeholder","href","map","checked","valideFio","trim","split","valideBirthDate","birthDateValue","nums","every","num","index","Validate","SmallCard","props","handleClick","Container","App","initialState","rootReducer","combineReducers","newCards","action","push","filter","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b0b31fb0.chunk.js","sourcesContent":["export const ADD_CARD = \"ADD_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const CHOOSE_CARD = \"CHOOSE_CARD\";\nexport const RESET_CARD = \"RESET_CARD\";\nexport const EDIT_DATA = \"EDIT_DATA\";","import { ADD_CARD, DELETE_CARD, UPDATE_CARD, CHOOSE_CARD, RESET_CARD, EDIT_DATA } from \"./constants\";\n\nexport function addCard(card) {\n    return {\n        type: ADD_CARD,\n        payload: card\n    }\n}\n\nexport function deleteCard(cardId) {\n    return {\n        type: DELETE_CARD,\n        payload: cardId\n    }\n}\n\nexport function updateCard(card) {\n    return {\n        type: UPDATE_CARD,\n        payload: card\n    }\n}\n\nexport function chooseCard(cardId) {\n    return {\n        type: CHOOSE_CARD,\n        payload: cardId\n    }\n}\n\nexport function resetCard(cardId) {\n    return {\n        type: RESET_CARD,\n        payload: cardId\n    }\n}\n\nexport function editData(card) {\n    return {\n        type: EDIT_DATA,\n        payload: card\n    }\n}","export default function ChooseCard(id) {\n    const allCards       = document.querySelectorAll(\".small-card\"),\n          fullCard       = document.querySelector(\".full-card\"),\n          deleteBtn      = document.querySelector(\".delete-card\"),\n          hideLabelRight = document.querySelector(\".choose-emp\");\n\n    for (let i = 0; i < allCards.length; i++) {\n        if (allCards[i].getAttribute(\"id\") == id) {\n            if (allCards[i].classList.contains(\"small-card-active\")) {\n                fullCard.classList.remove(\"full-card-active\");\n                hideLabelRight.classList.remove(\"choose-emp-hidden\");\n                deleteBtn.classList.add(\"delete-card-off\");\n            }\n            else {\n                fullCard.classList.add(\"full-card-active\");\n                hideLabelRight.classList.add(\"choose-emp-hidden\");\n                deleteBtn.classList.remove(\"delete-card-off\");\n            }\n\n            allCards[i].classList.toggle(\"small-card-active\");\n        }\n        else {\n            allCards[i].classList.remove(\"small-card-active\");\n        }\n    }\n}","export default function ToggleText(flag) {\n    const text = document.querySelector(\".add-emp\");\n\n    if (flag) {\n        text.classList.add(\"add-emp-hidden\");\n        \n        setTimeout(() => {\n            text.style.display = \"none\";\n        }, 250);\n    }\n    else {\n        text.style.display = \"unset\";\n\n        setTimeout(() => {\n            text.classList.remove(\"add-emp-hidden\");\n        }, 0);\n    }\n}","export default function ToggleAddBtn(flag) {\n    const addBtn = document.querySelector(\".add-card\");\n\n    if (flag) {\n        addBtn.classList.add(\"add-card-off\");\n    }\n    else {\n        addBtn.classList.remove(\"add-card-off\");\n    }\n}","export default function() {\n    const fio       = document.querySelector(\".fio input\"),\n          birthDate = document.querySelector(\".birth-date input\"),\n          warning   = document.querySelector(\".warning\");\n\n    warning.classList.remove(\"warning-active\");\n    fio.classList.remove(\"fio-error\");\n    birthDate.classList.remove(\"input-error\");\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCard, chooseCard, deleteCard, editData } from \"../redux/actions\";\nimport ChooseCard from \"../scripts/ChooseCard\";\nimport ToggleText from \"../scripts/ToggleText\";\nimport ToggleAddBtn from \"../scripts/ToggleAddBtn\";\nimport ClearErrors from \"../scripts/ClearErrors\";\n\nconst NavBar = () => {\n    let cards = useSelector(state => state.cards);\n    let dispatch = useDispatch();\n    let targetCard = cards.find(card => card.chosen);\n    let isEmpty = cards.some(card => card.empty);\n\n    if (isEmpty) {\n        ToggleAddBtn(true);\n    }\n\n    const emptyCard = {\n        id: Math.ceil(Math.random() * 100000),\n        fio: \"\",\n        position: \"\",\n        birthDate: \"\",\n        sex: \"\",\n        fired: false,\n        chosen: false,\n        empty: true\n    }\n\n    const emptyData = {\n        ...emptyCard,\n        position: \"Junior Frontend Developer\",\n    }\n\n    const addHandler = () => {\n        if (!isEmpty) {\n            console.log(emptyData);\n            dispatch(editData(emptyData));\n            dispatch(addCard(emptyCard));\n            dispatch(chooseCard(emptyCard.id));\n\n            setTimeout(() => {\n                ToggleText(true);\n                ChooseCard(emptyCard.id);\n            }, 0);\n        }\n    }\n\n    const deleteHandler = () => {\n        if (targetCard) {\n            if (cards.length == 1) {\n                ToggleText(false);\n            }\n            \n            dispatch(deleteCard(targetCard.id));\n            ChooseCard(targetCard.id);\n            ToggleAddBtn(false);\n        }\n\n        ClearErrors();\n    }\n\n    return(\n        <nav className=\"navbar\">\n            <button onClick={addHandler} className=\"add-card\">\n                <h3>Добавить сотрудника</h3>\n            </button>\n            <button onClick={deleteHandler} className=\"delete-card delete-card-off\">\n                <h3>Удалить сотрудника</h3>\n            </button>\n        </nav>\n    );\n}\n\nexport default NavBar;","export const positions = [\n    \"Junior Frontend Developer\", \"Junior Backend Developer\",\n    \"Middle Frontend Developer\", \"Middle Backend Developer\", \n    \"Senior Frontend Developer\", \"Senior Backend Developer\"\n];","export default function TogglePicker() {\n    const submenu = document.querySelector(\".submenu\");\n\n    submenu.classList.toggle(\"ul-active\");\n}","export default function ToggleWarning(flag) {\n    const warning = document.querySelector(\".warning\");\n\n    if (flag) {\n        warning.classList.add(\"warning-active\");\n    }\n    else {\n        warning.classList.remove(\"warning-active\");\n    }\n}","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { positions } from \"../redux/directory\";\nimport TogglePicker from \"../scripts/TogglePicker\";\nimport Validate from \"../scripts/Validate\";\nimport { editData, resetCard, updateCard } from \"../redux/actions\";\nimport ToggleAddBtn from \"../scripts/ToggleAddBtn\";\nimport ToggleWarning from \"../scripts/ToggleWarning\";\n\nconst FullCard = () => {\n    const emptyCard = {\n        fio: \"\",\n        position: \"Junior Frontend Developer\",\n        birthDate: \"\",\n        sex: \"\",\n        fired: false\n    };\n\n    let dispatch = useDispatch();\n    let cards = useSelector(state => state.cards);\n    let targetCard = cards.find(card => card.chosen) || emptyCard;\n    let data = useSelector(state => state.edit);\n\n    const currentCard = { \n        ...targetCard,\n        fio: data.fio,\n        position: data.position,\n        birthDate: data.birthDate,\n        sex: data.sex,\n        fired: data.fired\n     };\n\n    const updateHandler = () => {\n        if (Validate()) {\n            ToggleAddBtn(false);\n            ToggleWarning(false);\n            dispatch(updateCard(currentCard));\n        }\n        else {\n            dispatch(resetCard(targetCard.id));\n            ToggleWarning(true);\n        }\n    }\n\n    return(\n        <div className=\"full-card\">\n            <p className=\"warning\">Заполните карту сотрудника</p>\n            <div className=\"fio\">\n                <label>ФИО</label>\n                <input\n                    onChange={(e) => {\n                        currentCard.fio = e.target.value;\n                        dispatch(editData(currentCard));\n                    }}\n                    name=\"fio\" \n                    type=\"text\" \n                    placeholder=\"Иванов Иван Иванович\" \n                    value={data.fio}\n                />\n            </div>\n\n            <div className=\"position-picker\">\n                <div className=\"position\">\n                    <label>Должность</label>\n                    <a onClick={() => TogglePicker()} href=\"#\">{data.position}</a>\n                </div>\n                <ul className=\"submenu\">\n                    {\n                        positions.map(position => \n                            <li \n                                onClick={() => {\n                                    currentCard.position = position;\n                                    dispatch(editData(currentCard));\n                                    TogglePicker();\n                                }}\n                            >\n                                { position }\n                            </li>\n                        )\n                    }\n                </ul>\n            </div>\n\n            <div className=\"birth-date\">\n                <label>Дата рождения</label>\n                <input\n                    onChange={(e) => {\n                        currentCard.birthDate = e.target.value;\n                        dispatch(editData(currentCard));\n                    }}\n                    name=\"birth-date\" \n                    type=\"date\" \n                    placeholder=\"01.01.2000\" \n                    value={data.birthDate}\n                />\n            </div>\n\n            <div className=\"sex\">\n                <label>Пол</label>\n                <div className=\"radio-group\">\n                    <div className=\"radio-holder\">\n                        <label>Мужской</label>\n                        <input \n                            onClick={(e) => {\n                                currentCard.sex = e.target.value;\n                                dispatch(editData(currentCard));\n                            }}\n                            type=\"radio\" \n                            value=\"Мужской\" \n                            name=\"sex\"\n                            checked={currentCard.sex === \"Мужской\"}\n                        />\n                    </div>\n                    <div className=\"radio-holder\">\n                        <label>Женский</label>\n                        <input \n                            onClick={(e) => {\n                                currentCard.sex = e.target.value;\n                                dispatch(editData(currentCard));\n                            }}\n                            type=\"radio\" \n                            value=\"Женский\" \n                            name=\"sex\"\n                            checked={currentCard.sex === \"Женский\"}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"fired\">\n                <label>Уволен?</label>\n                <input \n                    onClick={() => {\n                        currentCard.fired = !currentCard.fired;\n                        dispatch(editData(currentCard));\n                    }} \n                    type=\"checkbox\" \n                    value={data.fired}\n                    checked={data.fired}\n                />\n            </div>\n\n            <button onClick={updateHandler} className=\"save-changes\">Сохранить</button>\n        </div>\n    );\n}\n\nexport default FullCard;","export default function Validate() {\n    const fio       = document.querySelector(\".fio input\"),\n          birthDate = document.querySelector(\".birth-date input\");\n\n    // Проверка поля \"ФИО\" на валидность\n    let valideFio = false;\n    let fioValue = fio.value;\n\n    if (fioValue.trim().split(\" \").length >= 2) {\n        valideFio = true;\n    }\n\n    if (!valideFio) {\n        fio.classList.add(\"fio-error\");\n    }\n    else {\n        fio.classList.remove(\"fio-error\");\n    }\n    \n    // Проверка поля \"Дата Рождения\" на валидность\n    let valideBirthDate = false;\n    let birthDateValue = birthDate.value;\n    let nums = birthDateValue.split(\".\");\n\n    if (nums.length === 3) {\n        valideBirthDate = nums.every((num, index) => {\n            return num.length === 2 && index === 0 && +num >= 1 & +num <= 31 || \n                   num.length === 2 && index === 1 && +num >= 1 & +num <= 12 ||\n                   num.length === 4 && index === 2 && +num >= 1920 & +num <= 2020\n        })\n    }\n\n    // Если поле \"Дата Рождения\" пустое, то оно валидное, так как необязательно к заполнению\n    if (!birthDateValue.trim()) {\n        valideBirthDate = true;\n    }\n\n    if (!valideBirthDate) {\n        birthDate.classList.add(\"input-error\");\n    }\n    else {\n        birthDate.classList.remove(\"input-error\");\n    }\n\n    return(valideFio && valideBirthDate);\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chooseCard, editData } from \"../redux/actions\";\nimport ChooseCard from \"../scripts/ChooseCard\";\nimport ToggleWarning from \"../scripts/ToggleWarning\";\n\nconst SmallCard = (props) => {\n    let dispatch = useDispatch();\n    let cards = useSelector(state => state.cards);\n    let isEmpty = cards.some(card => card.empty);\n\n    const handleClick = () => {\n        if (!isEmpty) {\n            const card = {\n                fio: props.fio,\n                position: props.position,\n                birthDate: props.birthDate,\n                sex: props.sex,\n                fired: props.fired\n            };\n\n            dispatch(editData(card));\n            dispatch(chooseCard(props.id));\n            ChooseCard(props.id);\n        }\n        else {\n            ToggleWarning(true);\n        }\n    }\n\n    return(\n        <div onClick={() => handleClick()} id={props.id} className=\"small-card\">\n            <div className=\"fio\">\n                <h3>{ props.fio ? props.fio : \"Не указано\"}</h3>\n            </div>\n            <div className=\"column\">\n                <p>Должность: <b>{ props.position ? props.position : \"Не указано\" }</b></p>\n                <p>Дата рождения: <b>{ props.birthDate ? props.birthDate : \"Не указано\" }</b></p>\n                <p>Пол: <b>{ props.sex ? props.sex : \"Не указано\" }</b></p>\n                <p><b>{ props.fired ? \"Уволен\" : \"Не уволен\"}</b> </p>\n            </div>\n        </div>\n    );\n}\n\nexport default SmallCard;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FullCard from \"./FullCard\";\nimport SmallCard from \"./SmallCard\";\n\nconst Container = () => {\n    let cards = useSelector(state => state.cards);\n\n    return(\n        <div className=\"container\">\n            <div className=\"card-list\">\n                <h1 className=\"add-emp\">Добавьте сотрудника</h1>\n                { \n                    cards.map(card => {\n                        return(\n                            <SmallCard\n                                id={card.id}\n                                fio={card.fio}\n                                position={card.position}\n                                birthDate={card.birthDate}\n                                sex={card.sex}\n                                fired={card.fired}\n                            />\n                        )\n                    })\n                }\n            </div>\n            <div className=\"card-editting\">\n                <h1 className=\"choose-emp\">Выберите сотрудника</h1>\n                <FullCard />\n            </div>\n        </div>\n    );\n}\n\nexport default Container;","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NavBar/>\n            <Container/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ADD_CARD, DELETE_CARD, UPDATE_CARD, CHOOSE_CARD, RESET_CARD } from \"./constants\";\n\nconst cards = [];\n\nexport function cardReducer(state = cards, action) {\n    let newCards;\n\n    switch (action.type) {\n        case ADD_CARD:\n            newCards = [...state];\n            newCards.push(action.payload);\n            return newCards;\n        case DELETE_CARD:\n            newCards = [...state];\n            newCards = newCards.filter(card => card.id != action.payload);\n            return newCards;\n        case UPDATE_CARD:\n            let index = -1;\n            newCards = [...state];\n\n            for (let i = 0; i < newCards.length; i++) {\n                if (newCards[i].id === action.payload.id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            action.payload.empty = false;\n\n            if (index !== -1) {\n                newCards[index] = action.payload;\n            }\n\n            return newCards;\n        case CHOOSE_CARD:\n            newCards = [...state];\n            newCards.map(card => {\n                if (card.chosen && card.id == action.payload) {\n                    card.chosen = false;\n                }\n                else {\n                    card.id === action.payload ? card.chosen = true : card.chosen = false;\n                }\n            });\n            return newCards;\n        case RESET_CARD:\n            newCards = [...state];\n            newCards.map(card => card.id == action.payload ? card.empty = true : card.empty = false)\n            return newCards;\n        default:\n            return state;\n    }\n}","import { EDIT_DATA } from \"./constants\";\n\nconst initialState = {\n    fio: \"\",\n    position: \"Junior Frontend Developer\",\n    birthDate: \"\",\n    sex: \"\",\n    fired: false\n}\n\nexport function editReducer(state = initialState, action) {\n    if (action.type === EDIT_DATA) {\n        const card = action.payload;\n        \n        return { \n            ...state,\n            id: card.id, \n            fio: card.fio,\n            position: card.position,\n            birthDate: card.birthDate,\n            sex: card.sex,\n            fired: card.fired,\n            chosen: card.chosen,\n            empty: card.empty\n        };\n    }\n\n    return state;\n}","import { combineReducers, createStore } from \"redux\";\nimport { cardReducer } from \"./cardReducer\";\nimport { editReducer } from \"./editReducer\";\n\nconst rootReducer = combineReducers({ cards: cardReducer, edit: editReducer });\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n            <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}